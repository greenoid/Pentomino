name: Maven Release

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release version (e.g., 1.0.0) - leave empty for automatic'
        required: false
        default: ''
      next_version:
        description: 'Next development version (e.g., 1.1.0) - leave empty for automatic'
        required: false
        default: ''

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    
    - name: Configure Git
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
    
    - name: Extract current version
      id: current_version
      run: |
        CURRENT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
        echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
        echo "Current version: $CURRENT_VERSION"
    
    - name: Determine release and next version
      id: versions
      run: |
        CURRENT_VERSION="${{ steps.current_version.outputs.version }}"
        
        # Use input release version or auto-calculate
        if [ -n "${{ github.event.inputs.release_version }}" ]; then
          RELEASE_VERSION="${{ github.event.inputs.release_version }}"
        else
          # Remove -SNAPSHOT from current version
          RELEASE_VERSION="${CURRENT_VERSION%-SNAPSHOT}"
        fi
        
        # Use input next version or auto-calculate
        if [ -n "${{ github.event.inputs.next_version }}" ]; then
          NEXT_VERSION="${{ github.event.inputs.next_version }}-SNAPSHOT"
        else
          # Increment minor version by default
          if [[ $RELEASE_VERSION =~ ^([0-9]+)\.([0-9]+)\.([0-9]+)$ ]]; then
            MAJOR="${BASH_REMATCH[1]}"
            MINOR="${BASH_REMATCH[2]}"
            PATCH="${BASH_REMATCH[3]}"
            NEXT_MINOR=$((MINOR + 1))
            NEXT_VERSION="${MAJOR}.${NEXT_MINOR}.0-SNAPSHOT"
          else
            echo "Error: Cannot parse version format"
            exit 1
          fi
        fi
        
        echo "release_version=$RELEASE_VERSION" >> $GITHUB_OUTPUT
        echo "next_version=$NEXT_VERSION" >> $GITHUB_OUTPUT
        echo "Release version: $RELEASE_VERSION"
        echo "Next development version: $NEXT_VERSION"
    
    - name: Maven Release Prepare
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        mvn -B release:prepare \
          -DreleaseVersion=${{ steps.versions.outputs.release_version }} \
          -DdevelopmentVersion=${{ steps.versions.outputs.next_version }} \
          -Dtag=v${{ steps.versions.outputs.release_version }} \
          -DscmCommentPrefix="[maven-release-plugin] " \
          -DpushChanges=true
    
    - name: Maven Release Perform
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        mvn -B release:perform \
          -Darguments="-DskipTests"
    
    - name: Get release tag
      id: release_tag
      run: |
        TAG="v${{ steps.versions.outputs.release_version }}"
        echo "tag=$TAG" >> $GITHUB_OUTPUT
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.release_tag.outputs.tag }}
        name: Release ${{ steps.versions.outputs.release_version }}
        body: |
          ## Pentomino Game Release ${{ steps.versions.outputs.release_version }}
          
          ### Download and Run
          Download the JAR file and run the game:
          ```bash
          java -jar Pentomino-${{ steps.versions.outputs.release_version }}.jar
          ```
          
          Or use the fat JAR with all dependencies:
          ```bash
          java -jar Pentomino-${{ steps.versions.outputs.release_version }}-jar-with-dependencies.jar
          ```
          
          ### Requirements
          - Java 11 or higher
          
          ### What's New
          This release was automatically created using Maven Release Plugin.
          
          See commit history for detailed changes.
        files: |
          target/checkout/target/Pentomino-*.jar
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Upload release artifacts
      uses: actions/upload-artifact@v4
      with:
        name: release-artifacts-${{ steps.versions.outputs.release_version }}
        path: target/checkout/target/*.jar
        retention-days: 30
    
    - name: Release Summary
      run: |
        echo "## ðŸŽ‰ Release Complete!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Released Version:** ${{ steps.versions.outputs.release_version }}" >> $GITHUB_STEP_SUMMARY
        echo "**Next Version:** ${{ steps.versions.outputs.next_version }}" >> $GITHUB_STEP_SUMMARY
        echo "**Tag:** ${{ steps.release_tag.outputs.tag }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "View the release: [Release ${{ steps.versions.outputs.release_version }}](${{ github.server_url }}/${{ github.repository }}/releases/tag/${{ steps.release_tag.outputs.tag }})" >> $GITHUB_STEP_SUMMARY